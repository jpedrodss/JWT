// <auto-generated />
using System;
using JWT.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JWT.Migrations
{
    [DbContext(typeof(NyousContext))]
    partial class NyousContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JWT.Domains.Acesso", b =>
                {
                    b.Property<int>("IdAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdAcesso")
                        .HasName("PK__Acesso__CDF01DA1E501DC4E");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("JWT.Domains.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UrlImagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__A3C02A102F8F09CF");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("JWT.Domains.Convite", b =>
                {
                    b.Property<int>("IdConvite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioConvidado")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioEmissor")
                        .HasColumnType("int");

                    b.HasKey("IdConvite")
                        .HasName("PK__Convite__318FC5549B02F24E");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdUsuarioConvidado");

                    b.HasIndex("IdUsuarioEmissor");

                    b.ToTable("Convite");
                });

            modelBuilder.Entity("JWT.Domains.Evento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("AcessoRestrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(1)")
                        .HasDefaultValueSql("((0))")
                        .IsFixedLength(true)
                        .HasMaxLength(1);

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdLocalizacao")
                        .HasColumnType("int");

                    b.HasKey("IdEvento")
                        .HasName("PK__Evento__034EFC042F5AA0AC");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdLocalizacao");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("JWT.Domains.Localizacao", b =>
                {
                    b.Property<int>("IdLocalizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Cep")
                        .HasColumnName("CEP")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Uf")
                        .HasColumnName("UF")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.HasKey("IdLocalizacao")
                        .HasName("PK__Localiza__C96A5BF677ABA1E6");

                    b.ToTable("Localizacao");
                });

            modelBuilder.Entity("JWT.Domains.Presenca", b =>
                {
                    b.Property<int>("IdPresenca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdPresenca")
                        .HasName("PK__Presenca__50FB6F5DC4BC1AF8");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Presenca");
                });

            modelBuilder.Entity("JWT.Domains.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<int?>("IdAcesso")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__5B65BF973C169EA3");

                    b.HasIndex("IdAcesso");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("JWT.Domains.Convite", b =>
                {
                    b.HasOne("JWT.Domains.Evento", "IdEventoNavigation")
                        .WithMany("Convite")
                        .HasForeignKey("IdEvento")
                        .HasConstraintName("FK__Convite__IdEvent__44FF419A");

                    b.HasOne("JWT.Domains.Usuario", "IdUsuarioConvidadoNavigation")
                        .WithMany("ConviteIdUsuarioConvidadoNavigation")
                        .HasForeignKey("IdUsuarioConvidado")
                        .HasConstraintName("FK__Convite__IdUsuar__46E78A0C");

                    b.HasOne("JWT.Domains.Usuario", "IdUsuarioEmissorNavigation")
                        .WithMany("ConviteIdUsuarioEmissorNavigation")
                        .HasForeignKey("IdUsuarioEmissor")
                        .HasConstraintName("FK__Convite__IdUsuar__45F365D3");
                });

            modelBuilder.Entity("JWT.Domains.Evento", b =>
                {
                    b.HasOne("JWT.Domains.Categoria", "IdCategoriaNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__Evento__IdCatego__412EB0B6");

                    b.HasOne("JWT.Domains.Localizacao", "IdLocalizacaoNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("IdLocalizacao")
                        .HasConstraintName("FK__Evento__IdLocali__403A8C7D");
                });

            modelBuilder.Entity("JWT.Domains.Presenca", b =>
                {
                    b.HasOne("JWT.Domains.Evento", "IdEventoNavigation")
                        .WithMany("Presenca")
                        .HasForeignKey("IdEvento")
                        .HasConstraintName("FK__Presenca__IdEven__4AB81AF0");

                    b.HasOne("JWT.Domains.Usuario", "IdUsuarioNavigation")
                        .WithMany("Presenca")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Presenca__IdUsua__4BAC3F29");
                });

            modelBuilder.Entity("JWT.Domains.Usuario", b =>
                {
                    b.HasOne("JWT.Domains.Acesso", "IdAcessoNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdAcesso")
                        .HasConstraintName("FK__Usuario__IdAcess__3C69FB99");
                });
#pragma warning restore 612, 618
        }
    }
}
